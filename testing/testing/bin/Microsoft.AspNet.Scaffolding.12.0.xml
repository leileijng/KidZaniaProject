<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.AspNet.Scaffolding.12.0</name>
    </assembly>
    <members>
        <member name="T:Microsoft.AspNet.Scaffolding.Telemetry.TelemetryKeys">
            <summary>
            Keys into Context.Items and Info dictionaries
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Scaffolding.Telemetry.TelemetryKeys.Mvc">
            <summary>
            Copied from Microsoft.AspNet.Scaffolding.Mvc.Telemetry.TelemetrySharedKeys
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Scaffolding.CodeElementExtensions">
            <summary>
            Useful extension methods for <see cref="T:EnvDTE.CodeElement"/>
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.CodeElementExtensions.IsPublic(EnvDTE.CodeElement)">
            <summary>
            Returns true if the given <paramref name="codeElement"/> is public.
            Otherwise false.
            </summary>
            <param name="codeElement"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.AspNet.Scaffolding.CodeGenerationContext">
            <summary>
            Contains the context for one complete code generation operation.
            </summary>
            <remarks>
            This object is created by framework before a code generation
            operation and is maintained throughout the operation.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.CodeGenerationContext.#ctor(EnvDTE.Project,EnvDTE.ProjectItem,System.IServiceProvider)">
            <summary>
            For internal use only. Code generator implementors should not
            call this.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Scaffolding.CodeGenerationContext.ActiveProject">
            <summary>
            Current project in which code generator is generating the code.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Scaffolding.CodeGenerationContext.ActiveProjectItem">
            <summary>
            Current project item selected by the user.
            This can be null in cases where code generation is invoked from project root node.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Scaffolding.CodeGenerationContext.ServiceProvider">
            <summary>
            ServiceProvider for getting all code generation services and global visual studio
            services.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Scaffolding.CodeGenerationContext.Items">
            <summary>
            Gets a key/value collection that can be used to organize
            and share data during a code generation operation.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Scaffolding.CodeGenerationContext.Packages">
            <summary>
            A list of NuGet packages that should be installed after code generation completes successfully.
            </summary>        
        </member>
        <member name="T:Microsoft.AspNet.Scaffolding.CodeGenerator">
            <summary>
            An abstract class representing a code generator.
            For more details <see cref="T:Microsoft.AspNet.Scaffolding.ICodeGenerator"/> interface.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.CodeGenerator.#ctor(Microsoft.AspNet.Scaffolding.CodeGenerationContext,Microsoft.AspNet.Scaffolding.CodeGeneratorInformation)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Scaffolding.CodeGenerator.Context">
            <summary>
            Gets the <see cref="T:Microsoft.AspNet.Scaffolding.CodeGenerationContext"/>
            for the current code generation operation.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Scaffolding.CodeGenerator.ServiceProvider">
            <summary>
            Gets the <see cref="T:System.IServiceProvider"/> for the
            current code generation operation.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Scaffolding.CodeGenerator.Information">
            <summary>
            Gets the <see cref="T:Microsoft.AspNet.Scaffolding.CodeGeneratorInformation"/>
            for the current code generation operation.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.CodeGenerator.ShowUIAndValidate">
            <summary>
            Gathers and validates information necessary for code generation.
            Any UI for the code generator should be displayed in this method.
            </summary>
            <returns>
            Return value indicates whether information was gathered and code
            generation can be performed.
            </returns>
            <remarks>
            Implement and return true, if scaffolder needs no user interface.
            </remarks>
        </member>
        <member name="P:Microsoft.AspNet.Scaffolding.CodeGenerator.Dependencies">
            <summary>
            A list of NuGet packages upon which this
            code generator depends in order to run successfully. Packages listed here will be installed
            after ShowUIAndValidate succeeded and before the 
            GenerateCode method is invoked. 
            </summary>
            <returns>A list containing the NuGet package dependencies</returns>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.CodeGenerator.GenerateCode">
            <summary>
            Performs code generation.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Scaffolding.CodeGenerator.TemplateFolders">
            <summary>
            List of search paths of this code generator where templates/static files are searched for.
            By default, this list contains only one folder which is a sub-directory named 
            "Templates\<see cref="P:Microsoft.AspNet.Scaffolding.CodeGeneratorInformation.Id"/> 
            inside the directory containing the CodeGenerator assembly. Custom code generators
            can override the default behavior.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.CodeGenerator.AddClassMemberFromTemplate(EnvDTE.Project,EnvDTE.CodeType,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.String)">
            <summary>
            Adds the result of running a visual studio T4 text template
            to an existing source file as a class member at the end.
            </summary>
            <param name="project">Project that contains the class. This is required
            for identifying the file extension with which the T4 template is searched for.</param>
            <param name="codeClass">The class to which the code should be added.</param>
            <param name="templateName">Name of the template file. The actual text template
            file searched for is of the format "{templateName}.{codeLanguageFileExtension}.t4".
            </param>
            <param name="templateParameters">Parameters for the template.
            These parameters can be accessed in text template using a parameter directive.
            The values passed in must be either serializable or 
            extend <see cref="T:System.MarshalByRefObject"/> type.</param>
            <param name="memberName">
            Name of the member to be generated by the template. 
            If a member with that name already exists in the class, nothing is done.
            </param>
            <returns>True if the member was added. False otherwise (e.g. the member already existed).</returns>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.CodeGenerator.AddFileFromTemplate(EnvDTE.Project,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean)">
            <summary>
            Executes a template and adds the generated code as a project file.
            </summary>
            <param name="project">Project in which file should be added.</param>
            <param name="outputPath">The path of the file to be added relative to current project.
            This should not include the file extension. The file extension is inferred from running
            the text template.</param>
            <param name="templateName">Name of the template file. The actual text template
            file searched for is of the format "{templateName}.{codeLanguageFileExtension}.t4".
            </param>
            <param name="templateParameters">Parameters for the template.
            These parameters can be accessed in text template using a parameter directive.
            The values passed in must be either serializable or 
            extend <see cref="T:System.MarshalByRefObject"/> type.</param>
            <param name="skipIfExists">If true and the file exists, then no action is taken.  If false and the file exists, then the file will be overwritten.</param>
            <returns>True if the file was added. False otherwise.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.CodeGenerator.AddFolder(EnvDTE.Project,System.String)">
            <summary>
            Adds a new folder to the active project at the given relative path.
            If a project item already exists for the active project
            at the given projectRelativePath, nothing is done.
            If there is already a folder on the disk but that is not
            part of the project, the folder is added to the project.
            </summary>
            <param name="project">Project in which folder should be added.</param>
            <param name="projectRelativePath">This should be relative path of the
            the folder to be added.</param>
            <returns>ProjectItem added.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.CodeGenerator.AddFile(EnvDTE.Project,System.String,System.String,System.Boolean)">
            <summary>
            Adds a new file to the active project at the given relative path.
            </summary>
            <param name="project">Project in which file should be added.</param>
            <param name="projectRelativePath">This should be relative path of the
            the file to be added.</param>
            <param name="sourceFilePath">Name of the source file including extension.
            If an absolute path is provided and the file exists, that file is used.
            Otherwise the source file is searched in the 
            <see cref="P:Microsoft.AspNet.Scaffolding.CodeGenerator.TemplateFolders"/>.</param>
            <param name="skipIfExists">If true and file exists, then no action is taken. 
            If false and file exists, then file is overwritten.</param>
            <returns>True if the file was added. False otherwise.</returns>
        </member>
        <member name="T:Microsoft.AspNet.Scaffolding.CodeGeneratorActionsService">
            <summary>
            Provides a default implementation for <see cref="T:Microsoft.AspNet.Scaffolding.ICodeGeneratorActionsService"/>.
            See ICodeGeneratorActionsService.cs for public API documentation
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.CodeGeneratorActionsService.ItemExistsInProjectOrOnDisk(System.String,EnvDTE.Project,EnvDTE.ProjectItem@)">
            <summary>
            returns true if the item exists in either the project OR the file system.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.CodeGeneratorActionsService.AddFileToProjectHelper(EnvDTE.Project,System.String,System.String)">
            <summary>
            Adds a file containing the given text to the active project at the given relative path.
            If there is a file on disk, it is overwritten.  If the file already exists in the project, call OverwriteProjectItemTextContent instead.
            </summary>
            <param name="project">Project in which file should be added.</param>
            <param name="projectRelativePath">This should be relative path including file
            extension of the file to be added.</param>
            <param name="text">Content of the file to be added.</param>
        </member>
        <member name="T:Microsoft.AspNet.Scaffolding.CodeGeneratorFactory">
            <summary>
            A factory for creating instances of a code generator.
            For more details <see cref="T:Microsoft.AspNet.Scaffolding.CodeGenerator"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.CodeGeneratorFactory.#ctor(Microsoft.AspNet.Scaffolding.CodeGeneratorInformation)">
            <summary>
            Constructor.
            </summary>
            <param name="codeGeneratorInformation"></param>
        </member>
        <member name="P:Microsoft.AspNet.Scaffolding.CodeGeneratorFactory.Information">
            <summary>
            Code generator information.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.CodeGeneratorFactory.CreateInstance(Microsoft.AspNet.Scaffolding.CodeGenerationContext)">
            <summary>
            Method for creating the code generator instance.
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.CodeGeneratorFactory.IsSupported(Microsoft.AspNet.Scaffolding.CodeGenerationContext)">
            <summary>
            Determines whether this factory supports creating a code generator in
            the supplied context.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Scaffolding.CodeGeneratorFilesLocator">
            <summary>
            A default implementation of <see cref="T:Microsoft.AspNet.Scaffolding.ICodeGeneratorFilesLocator"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.CodeGeneratorFilesLocator.GetTextTemplatePath(System.String,System.Collections.Generic.IEnumerable{System.String},System.String)">
            <summary>
            Finds a T4 Text Template of the format "{templateName}.{templateFileExtension}.t4"
            within the provided search folders.
            </summary>
            <param name="templateName">Name of the template file without the extension.</param>
            <param name="searchFolders">Folders to search the file.</param>
            <param name="templateFileExtension">The extension for template file. This is
            usually code language based file extension like "cs" or "vb".
            </param>
            <remarks>
            The actual file name searched for contains a .t4 string at the end, 
            For example, if the templateName is "Default",
            when templateFileExtension is null or empty, the file name searched for is "Default.t4" and
            when templateFileExtension is "cs" or ".cs", the file name searched for is "Default.cs.t4".
            </remarks>
            <returns>Full path of the T4 Text Template found first in the search folders.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.CodeGeneratorFilesLocator.GetStaticFilePath(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Finds a static file matching the given <paramref name="fileName"/> within the 
            provided search folders.
            </summary>
            <param name="fileName">Name of the file including the extension.</param>
            <param name="searchFolders">Folders to search the file.</param>
            <returns>Full path of the static file found first in the search folders.</returns>
        </member>
        <member name="T:Microsoft.AspNet.Scaffolding.CodeGeneratorInformation">
            <summary>
            Information about the code generator.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.CodeGeneratorInformation.#ctor(System.String,System.String,System.String,System.Version,System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.CodeGeneratorInformation.#ctor(System.String,System.String,System.String,System.Version,System.String,System.Windows.Media.ImageSource,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.CodeGeneratorInformation.#ctor(System.String,System.String,System.String,System.Version,System.String,System.Windows.Media.ImageSource,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Int32)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Scaffolding.CodeGeneratorInformation.Id">
            <summary>
            The unique Id which identifies the CodeGenerator. If not explicitly set,
            type name of the code generator without the namespace name is used as Id.
            This value should be invariant across langauages (e.g. not localized).
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Scaffolding.CodeGeneratorInformation.DisplayName">
            <summary>
            Name of the code generator shown in UI.
            This should be typically localized.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Scaffolding.CodeGeneratorInformation.Description">
            <summary>
            A brief description of what the code generator does.
            This should be typically localized.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Scaffolding.CodeGeneratorInformation.Author">
            <summary>
            Author of the code generator.
            This should be typically localized.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Scaffolding.CodeGeneratorInformation.Version">
            <summary>
            Version of the code generator.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Scaffolding.CodeGeneratorInformation.Icon">
            <summary>
            Icon to be used for the code generator.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Scaffolding.CodeGeneratorInformation.Gestures">
            <summary>
            A list of strings used as matching criteria for 
            determining support for certain actions within the UI.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Scaffolding.CodeGeneratorInformation.Categories">
            <summary>
            A list of strings used for organizing the CodeGenerators within the UI.
            Refer to <see cref="T:Microsoft.AspNet.Scaffolding.Categories"/> for some
            example values.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Scaffolding.CodeGeneratorInformation.DisplaySlot">
            <summary>
            A relative ordering for the items to be displayed.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Scaffolding.CodeGeneratorInformation.DisplayTitle">
            <summary>
            Used as title for the scaffolder window.
            Default value is same as <see cref="P:Microsoft.AspNet.Scaffolding.CodeGeneratorInformation.DisplayName"/>
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.CodeTypeService.GetAllCodeTypes(EnvDTE.Project)">
            <summary>
            Gets all visible types from a project.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.CodeTypeService.GetCodeTypesFromLocalCodeElements(EnvDTE.CodeElements)">
            <summary>
            Recursively scan to extract all CodeType elements.
            We're only interested in types defined in the project itself, so we disregard elements that 
            contain one or more type with InfoLocation != vsCMInfoLocation.vsCMInfoLocationProject.
            However unfortunately for code namespaces, the InfoLocation is external for all the namespaces
            including the ones in the project, so we have to use a workaround.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Scaffolding.CommonUI.RemoveSubstringExtension">
            <summary>
            Used for removing '_' (or any other specified substring) from AutomationProperties.Name
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.CommonUI.RemoveSubstringExtension.#ctor(System.Object)">
            <summary/>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.CommonUI.RemoveSubstringExtension.#ctor(System.Object,System.String)">
            <summary/>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.CommonUI.RemoveSubstringExtension.ProvideValue(System.IServiceProvider)">
            <see cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)"/>
        </member>
        <member name="T:Microsoft.AspNet.Scaffolding.ExceptionWithHyperLinkMessage">
            <summary>
            Exception class that allows a hyperlink to be shown in the error dialog
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.ExceptionWithHyperLinkMessage.#ctor(System.String,System.String,System.String)">
            <summary>
            Exception class that allows a hyperlink to be shown in the error dialog
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.ExceptionWithHyperLinkMessage.#ctor(System.String,System.String,System.String,System.Exception)">
            <summary>
            Exception class that allows a hyperlink to be shown in the error dialog
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Scaffolding.ExceptionWithHyperLinkMessage.HyperLinkText">
            <summary>
            Text that is displayed for the hyperlink
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Scaffolding.ExceptionWithHyperLinkMessage.HyperLinkUrl">
            <summary>
            URL for the hyperlink
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.ExceptionWithHyperLinkMessage.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="T:Microsoft.AspNet.Scaffolding.ICategoryRegistrationService">
            <summary>
            Service to register localized names for custom category 
            node names displayed in the Add -> New Scaffolded Item dialog
            which are defined by other VSPackages. The VSPackage implementors
            should use <see cref="T:Microsoft.AspNet.Scaffolding.SCodeGeneratorDialog"/>
            to get this service.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.ICategoryRegistrationService.TryRegister(System.String,System.String)">
            <summary>
            Registers a localized category name for the given category path.
            </summary>
            <param name="categoryPath">The full path of the category.</param>
            <param name="displayName">The localized name of the category.</param>
            <returns>True if an existing registration for the given category path was not present.  False otherwise.</returns>
        </member>
        <member name="T:Microsoft.AspNet.Scaffolding.ICodeGenerator">
            <summary>
            An interface representing a code generator.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Scaffolding.ICodeGenerator.Dependencies">
            <summary>
            A list of NuGet packages upon which this
            code generator depends in order to run successfully. Packages listed here will be installed
            after ShowUIAndValidate succeeded and before the 
            GenerateCode method is invoked. 
            </summary>
            <returns>A list containing the NuGet package dependencies</returns>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.ICodeGenerator.GenerateCode">
            <summary>
            Performs code generation.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.ICodeGenerator.ShowUIAndValidate">
            <summary>
            Gathers and validates information necessary for code generation.
            Any UI for the code generator should be displayed in this method.
            </summary>
            <returns>
            Return value indicates whether information was gathered and code
            generation can be performed.
            </returns>
            <remarks>
            Implement and return true, if scaffolder needs no user interface.
            </remarks>
        </member>
        <member name="T:Microsoft.AspNet.Scaffolding.ICodeGeneratorActionsService">
            <summary>
            A service providing support for various code generator actions.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.ICodeGeneratorActionsService.AddFileFromTemplate(EnvDTE.Project,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean)">
            <summary>
            Adds the result of running a visual studio T4 text template
            as a new file in the project.
            </summary>
            <param name="project">Project to which the file should be added.</param>
            <param name="outputPath">
            The path of the file to be added relative to current project.
            This should not include the file extension. 
            The file extension is inferred from running the text template.
            </param>
            <param name="templatePath">Full path of the text template file
            to execute.</param>
            <param name="templateParameters">Parameters for text template.</param>
            <param name="skipIfExists">If true and the file exists, then no action is taken.  If false and the file exists, then the file will be overwritten.</param>
            <returns>True if the file was added. False otherwise.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.ICodeGeneratorActionsService.AddFile(EnvDTE.Project,System.String,System.String,System.Boolean)">
            <summary>
            Adds a new file to the given project at the given relative path.
            </summary>
            <param name="project">Project to which the file should be added.</param>
            <param name="projectRelativePath">
            This should be relative path of the file to be added.
            </param>
            <param name="sourceFilePath">Full path of the source file.</param>
            <param name="skipIfExists">If true and the file exists, then no action is taken.
            If false and the file exists, then the file will be overwritten.</param>
            <returns>True if the file was added. False otherwise.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.ICodeGeneratorActionsService.AddFolder(EnvDTE.Project,System.String)">
            <summary>
            Adds a new folder to the given project at the given relative path. 
            If a project item already exists for the active project
            at the given projectRelativePath, nothing is done.
            If there is already a folder on the disk but that is not
            part of the project, the folder is added to the project.
            </summary>
            <param name="project">Project to which the folder should be added.</param>
            <param name="projectRelativePath">
            This should be relative path of the the folder to be added.
            </param>
            <returns>ProjectItem added.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.ICodeGeneratorActionsService.AddClassMemberFromTemplate(EnvDTE.CodeType,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.String)">
            <summary>
            Adds the result of running a visual studio T4 text template
            to an existing source file as a class member at the end.
            </summary>
            <param name="codeClass">
            The class to which the new member should be added.
            </param>
            <param name="templatePath">
            Full path of the text template file to execute.
            </param>
            <param name="templateParameters">Parameters for text template.</param>
            <param name="memberName">
            Name of the member to be generated by the template. 
            If a member with that name already exists in the class, nothing is done.
            </param>
            <returns>True if the member was added. False otherwise (e.g. the member already existed).</returns>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.ICodeGeneratorActionsService.CreateAppDataFolder(EnvDTE.Project)">
            <summary>
            Creates the App_Data folder in the given project. The provided project must be an
            ASP.NET Web Application Project, Otherwise an exception is thrown.
            </summary>
            <param name="project">The visual studio project into which the App_Data folder should be added.</param>
        </member>
        <member name="T:Microsoft.AspNet.Scaffolding.ICodeGeneratorDialogInvoker">
            <summary>
            Used to invoke Add -> New Scaffolded Item dialog from
            other VSPackage functionalities like 
            custom visual studio menu implementation.
            The VSPackage implementors should use 
            <see cref="T:Microsoft.AspNet.Scaffolding.SCodeGeneratorDialog"/>
            to get this service.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Scaffolding.ICodeGeneratorDialogInvoker.CodeGenerationContext">
            <summary>
            When a <see cref="T:EnvDTE.Project"/> can be
            obtained from the current selection in visual
            studio, gets the <see cref="P:Microsoft.AspNet.Scaffolding.ICodeGeneratorDialogInvoker.CodeGenerationContext"/>
            with the <see cref="P:Microsoft.AspNet.Scaffolding.CodeGenerationContext.ActiveProject"/> 
            and <see cref="P:Microsoft.AspNet.Scaffolding.CodeGenerationContext.ActiveProjectItem"/> set.
            Otherwise returns null.
            </summary>
            <remarks>
            After getting the context from current selection,
            if there are some code generators that require additional
            context, that can be added to <see cref="P:Microsoft.AspNet.Scaffolding.CodeGenerationContext.Items"/>
            and then the <see cref="P:Microsoft.AspNet.Scaffolding.ICodeGeneratorDialogInvoker.CodeGenerationContext"/> can be used to
            call the method 
            <see cref="M:Microsoft.AspNet.Scaffolding.ICodeGeneratorDialogInvoker.ShowCodeGenerationDialog(Microsoft.AspNet.Scaffolding.CodeGenerationContext,System.String)"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.ICodeGeneratorDialogInvoker.ShowCodeGenerationDialog(Microsoft.AspNet.Scaffolding.CodeGenerationContext,System.String)">
            <summary>
            Shows the dialog which displays all the code generators.
            </summary>
            <param name="context">Current CodeGenerationContext.</param>
            <param name="requestedGesture">Current gesture used for filtering
            the code generators shown in the dialog.</param>
            <remarks>
            CodeGenerationContext can be obtained from 
            <see cref="P:Microsoft.AspNet.Scaffolding.ICodeGeneratorDialogInvoker.CodeGenerationContext"/> 
            property and additional context can be added to that
            before invoking this method.
            </remarks>
        </member>
        <member name="T:Microsoft.AspNet.Scaffolding.ICodeGeneratorFilesLocator">
            <summary>
            A service responsible for finding static files or T4 Text Templates.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.ICodeGeneratorFilesLocator.GetTextTemplatePath(System.String,System.Collections.Generic.IEnumerable{System.String},System.String)">
            <summary>
            Resolves the full path of a Visual Studio T4 Text Template from a template name and file extension.
            </summary>
            <param name="templateName">Name of the template file without the extension.</param>
            <param name="searchFolders">Folders to search the file.</param>
            <param name="templateFileExtension">The extension for template file. This is
            usually code language based file extension like "cs" or "vb".</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.ICodeGeneratorFilesLocator.GetStaticFilePath(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Resolves the full path of a static file from a file name.
            </summary>
            <param name="fileName">Name of the file including the extension.</param>
            <param name="searchFolders">Folders to search the file.</param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.AspNet.Scaffolding.CodePropertyExtensions">
            <summary>
            Useful extension methods for <see cref="T:EnvDTE.CodeProperty"/>
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.CodePropertyExtensions.HasPublicGetter(EnvDTE.CodeProperty)">
            <summary>
            Returns true if the given codeProperty has a public getter, otherwise false.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.CodePropertyExtensions.HasPublicSetter(EnvDTE.CodeProperty)">
            <summary>
            Returns true if the given codeProperty has a public setter, otherwise false.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.CodePropertyExtensions.IsIndexerProperty(EnvDTE.CodeProperty)">
            <summary>
            Returns true if the given codeProperty uses atleast one index parameter, otherwise false.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Scaffolding.CodeTypeExtensions">
            <summary>
            Useful extension methods for <see cref="T:EnvDTE.CodeType"/>
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.CodeTypeExtensions.IsDerivedType(EnvDTE.CodeType,System.Type)">
            <summary>
            Returns true if given <paramref name="type"/> is a matching type
            or a base type or an interface implemented by the .NET type represented by
            <paramref name="codeType"/>.
            This does not account for language-specific type representations, 
            so will not be accurate for types with language-specific short names, such as 
            primitive types or List(Of Integer).
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.CodeTypeExtensions.IsDerivedType(EnvDTE.CodeType,System.Collections.Generic.ISet{System.String})">
            <summary>
            Returns true if any of the given <paramref name="fullTypeNames"/> is a matching type name
            or one of the base type names in the hierarchy of the .NET type represented by
            <paramref name="codeType"/>.
            This does not account for language-specific type representations, 
            so will not be accurate for types with language-specific short names, such as List(Of Integer).
            </summary>
            <param name="codeType">Code type which needs to be determined if it's a derived type.</param>
            <param name="fullTypeNames">The fullTypeNames provided must be language representation
            of the type but not the Type.FullName from reflection. For example, the fullTypeName
            passed in VB must be "System.Data.Entity.DbSet(Of MyNamespace.MyModel)" but not
            System.Data.Entity.DbSet`1[MyNamespace.MyModel].</param>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.CodeTypeExtensions.IsDerivedType(EnvDTE.CodeType,System.String)">
            <summary>
            Returns true if given <paramref name="fullTypeName"/> is a matching type name
            or one of the base type names in the hierarchy of the .NET type represented by
            <paramref name="codeType"/>.
            This does not account for language-specific type representations, 
            so will not be accurate for types with language-specific short names, such as List(Of Integer).
            </summary>
            <param name="codeType">Code type which needs to be determined if it's a derived type.</param>
            <param name="fullTypeName">The fullTypeName provided must be language representation
            of the type but not the Type.FullName from reflection. For example, the fullTypeName
            passed in VB must be "System.Data.Entity.DbSet(Of MyNamespace.MyModel)" but not
            System.Data.Entity.DbSet`1[MyNamespace.MyModel].</param>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.CodeTypeExtensions.AddMemberFromSourceCode(EnvDTE.CodeType,System.String)">
            <summary>
            Adds a member to an existing <see cref="T:EnvDTE.CodeClass"/> or <see cref="T:EnvDTE.CodeInterface"/>,
            at the end of the class, with <see cref="F:EnvDTE.vsEPReplaceTextOptions.vsEPReplaceTextAutoformat"/>
            text formatting options.
            </summary>
            <param name="codeType">The class or interface to which the member should be added.</param>
            <param name="sourceCode">The source code of the member to be added. This must be 
            valid code in the target project's language.</param>
            <exception cref="T:System.InvalidOperationException">
            <paramref name="codeType"/> is not an instance of either <see cref="T:EnvDTE.CodeClass"/> or <see cref="T:EnvDTE.CodeInterface"/>.
            </exception>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.CodeTypeExtensions.AddMemberFromSourceCode(EnvDTE.CodeType,System.String,System.Object)">
            <summary>
            Adds a member to an existing <see cref="T:EnvDTE.CodeClass"/> or <see cref="T:EnvDTE.CodeInterface"/>,
            with <see cref="F:EnvDTE.vsEPReplaceTextOptions.vsEPReplaceTextAutoformat"/> text formatting options.
            </summary>
            <param name="codeType">The class or interface to which the member should be added.</param>
            <param name="sourceCode">The source code of the member to be added. This must be 
            valid code in the target project's language.</param>
            <param name="position">The position in the class where the source code should be added.
            See documentation for EnvDTE.CodeModel.AddVariable for allowed values. 
            If the value is null, the new member will be added to the end of the class.</param>
            <exception cref="T:System.InvalidOperationException">
            <paramref name="codeType"/> is not an instance of either <see cref="T:EnvDTE.CodeClass"/> or <see cref="T:EnvDTE.CodeInterface"/>.
            </exception>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.CodeTypeExtensions.AddMemberFromSourceCode(EnvDTE.CodeType,System.String,System.Object,EnvDTE.vsEPReplaceTextOptions)">
            <summary>
            Adds a member to an existing <see cref="T:EnvDTE.CodeClass"/> or <see cref="T:EnvDTE.CodeInterface"/>.
            </summary>
            <param name="codeType">The class or interface to which the member should be added.</param>
            <param name="sourceCode">The source code of the member to be added. This must be 
            valid code in the target project's language.</param>
            <param name="position">The position in the class where the source code should be added.
            See documentation for EnvDTE.CodeModel.AddVariable for allowed values. 
            If the value is null, the new member will be added to the end of the class.</param>
            <param name="replaceTextOptions">Text formatting options.</param>
            <exception cref="T:System.InvalidOperationException">
            <paramref name="codeType"/> is not an instance of either <see cref="T:EnvDTE.CodeClass"/> or <see cref="T:EnvDTE.CodeInterface"/>.
            </exception>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.CodeTypeExtensions.GetPublicMembers(EnvDTE.CodeType)">
            <summary>
            Gets all public members for a given <see cref="T:EnvDTE.CodeType"/> element.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Scaffolding.CodeTypeRefExtensions">
            <summary>
            Useful extension methods for <see cref="T:EnvDTE.CodeTypeRef"/>
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.CodeTypeRefExtensions.IsPrimitiveType(EnvDTE.CodeTypeRef)">
            <summary>
            Returns true if the given CodeTypeRef represents a primitive .NET type, e.g.,
            byte, bool, float, etc, otherwise false. Handles nullable primitive types as well.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.CodeTypeRefExtensions.IsMatchForReflectionType(EnvDTE.CodeTypeRef,System.Type)">
            <summary>
            Returns true if the given CodeTypeRef matches the specified .NET type, false otherwise.
            If the <paramref name="codeTypeRef"/> represents a nullable type and the <paramref name="type"/> 
            passed in is corresponding underlying type (ex: codeTypeRef is int? and type is int), 
            that's considered a match. Passing in nullable .NET type for <paramref name="type"/>
            is not expected to work.
            This requires that <paramref name="codeTypeRef"/> is attached to a parent code element 
            otherwise an InvalidOperationException is thrown.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.CodeTypeRefExtensions.IsMatchingTypeName(System.String,System.Type,System.String)">
            <summary>
            Returns true if the given type name represents the given .NET type within the context of the given
            language (only C# and VB are supported). For example, List(Of System.Int32) and List(Of Integer)
            in VB both represent the .NET type List``1[System.Int32]
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.CodeTypeRefExtensions.GetShortTypeName(System.String,System.String)">
            <summary>
            Converts type names containing long primitive names, e.g., List(Of System.Int32), 
            to language-specific short ones, e.g., List(Of Integer)
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.CodeTypeRefExtensions.ExtractNullableTypeParameterName(EnvDTE.CodeTypeRef)">
            <summary>
            If the given codeTypeRef represents a nullable type in either C# or VB, this method returns a string representation
            of the underlying type - a language-specific representation with full primitive names (e.g., MyStruct(Of System.Int32))
            If the given codeTypeRef does not represent a nullable type in these languages, this method returns null.
            
            The VB CodeModel API doesn't keep the type information when constructing CodeTypeRefs, Ex: 
            CodeModel.CreateCodeTypeRef("MyStruct(Of System.Int32)") returns a codeTypeRef
            with AsFullName = "MyStruct(Of T)" - i.e., it loses generic type parameter information. 
            So this method returns just the string represenation.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Scaffolding.ICodeTypeService">
            <summary>
            Service for getting the types of a project.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.ICodeTypeService.GetCodeType(EnvDTE.Project,System.String)">
            <summary>
            Get the type in the given project matching the specified fullName.
            </summary>
            <returns>The type matching the specified fullName if an exact match is found or null (nothing) if no match is found.  If multiple matches are found, an exception is thrown.</returns>        
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.ICodeTypeService.GetAllCodeTypes(EnvDTE.Project)">
            <summary>
            Gets all visible types from a project.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Scaffolding.IDialogService">
            <summary>
            This is for internal microsoft use only.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.IDialogService.ShowErrorDialog(System.String,System.String)">
            <summary>
            Show a dialog with information about error from a code generation operation.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.IDialogService.ShowErrorDialog(System.String,System.String,System.String,System.String)">
            <summary>
            Show a dialog with information about error from a code generation operation.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.IDialogService.ShowProgressDialog(System.String,System.String,System.String)">
            <summary>
            Show a dialog while code generation is in progress.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.IDialogService.TryUpdateProgressDialogMessage(System.String,System.String)">
            <summary>
            Try to update the message of the wait dialog.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Scaffolding.IFileSystemService">
            <summary>
            Provides abstraction over File System operations like checking if a file exists, creating a directory, etc.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.IFileSystemService.FileExists(System.String)">
            <summary>
            Returns true if the file exists.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.IFileSystemService.DirectoryExists(System.String)">
            <summary>
            Returns true if the directory exists
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.IFileSystemService.WriteAllText(System.String,System.String)">
            <summary>
            Writes all text to the given file path.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.IFileSystemService.WriteAllText(System.String,System.String,System.Text.Encoding)">
            <summary>
            Writes all text to the given file path, with the given encoding.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.IFileSystemService.ReadAllText(System.String)">
            <summary>
            Reads all text from the given file.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.IFileSystemService.CreateDirectory(System.String)">
            <summary>
            Creates a directory at the specified path.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.IFileSystemService.EnumerateDirectory(System.String,System.String,System.IO.SearchOption)">
            <summary>
            Enumerates the contents of the directory that match the pattern.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.IFileSystemService.MakeFileReadWrite(System.String)">
            <summary>
            Makes the file Read Write.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Scaffolding.INetCoreScaffolderFactory">
            <summary>
            Indicator interface for .NET Core scaffolders
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Scaffolding.IReflectedTypesService">
            <summary>
            Service for getting the types within a project.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.IReflectedTypesService.GetType(EnvDTE.Project,System.String)">
            <summary>
            Gets a type from a type name.
            </summary>
            <param name="project">The project to be used to get the type resolution service.</param>
            <param name="fullName">Full name of the type to get.</param>
            <returns>A type if exists matching the full name, otherwise null.</returns>
        </member>
        <member name="T:Microsoft.AspNet.Scaffolding.IRegistryValueProviderService">
            <summary>
            Internal service for abstracting getting registry values
            so that unit tests can have mock implementations.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.IRegistryValueProviderService.GetRegistryValue(System.String,System.String,System.String)">
            <summary>
            May return null if any of the parameters point
            to non existing keys, caller should handle that properly.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Scaffolding.IRollbackService">
            <summary>
            This interface provides a mechanism for rollback support for code generators.
            Built in support for common operations is supported. Additional rollback
            functionality can be obtained by providing a rollback action to
            <see cref="M:Microsoft.AspNet.Scaffolding.IRollbackService.AddRollbackAction(System.Action)"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.IRollbackService.NewProjectItemAdded(EnvDTE.Project,System.String)">
            <summary>
            Notification that a new file was added that may need to be rolled back.
            </summary>
            <param name="project">Project in which the new item was added.</param>
            <param name="projectRelativePath">Relative path of the item that was added.</param>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.IRollbackService.NewProjectFolderAdded(EnvDTE.Project,System.String)">
            <summary>
            Notification that a new folder was added that may need to be rolled back.
            </summary>
            <param name="project">Project in which the new folder was added.</param>
            <param name="projectRelativePath">Relative path of the folder that was added.</param>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.IRollbackService.ProjectItemOverwritten(EnvDTE.ProjectItem,System.String,System.Boolean)">
            <summary>
            Notification that an existing file was modified and may need to be rolled back.
            </summary>
            <param name="projectItem">The project file for the modified file</param>
            <param name="oldText">The file's text before modification</param>
            <param name="checkedOut">Whether SCC checkout occurred</param>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.IRollbackService.AddRollbackAction(System.Action)">
            <summary>
            Notification that a rollback action needs to occur if rollback occurs.
            </summary>
            <param name="action">The action to be performed if rollback occurs</param>
        </member>
        <member name="T:Microsoft.AspNet.Scaffolding.IVisualStudioEditorService">
            <summary>
            Provides editor integration with VS.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.IVisualStudioEditorService.TryOverwriteFileInEditor(System.String,System.String)">
            <summary>
            Tries to overwirte an existing file in the editor.
            </summary>
            <param name="filePath"></param>
            <param name="newContent"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.AspNet.Scaffolding.IVisualStudioInformation">
            <summary>
            Contains details about current running instance of Visual Studio.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Scaffolding.IVisualStudioInformation.InstallDirectory">
            <summary>
            Gets the full path to the directory in which Visual Studio is installed.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Scaffolding.IVisualStudioInformation.ScaffoldingInstallDirectory">
            <summary>
            Gets the full path to the directory in which the scaffolding tools are installed.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Scaffolding.IVisualStudioInformation.Version">
            <summary>
            Gets the version of Visual Studio.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Scaffolding.Core.Metadata.AssociationDirection">
            <summary>
            Represents an association type between entities.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.Scaffolding.Core.Metadata.AssociationDirection.None">
            <summary>
            Indicates that there is no association.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.Scaffolding.Core.Metadata.AssociationDirection.OneToOne">
            <summary>
            Indicates a one-to-one relationship.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.Scaffolding.Core.Metadata.AssociationDirection.OneToMany">
            <summary>
            Indicates a one-to-many relationship.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.Scaffolding.Core.Metadata.AssociationDirection.ManyToOne">
            <summary>
            Indicates a many-to-one relationship.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.Scaffolding.Core.Metadata.AssociationDirection.ManyToMany">
            <summary>
            Indicates a many-to-many relationship.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Scaffolding.Core.Metadata.ModelMetadata">
            <summary>
            Metadata about an entity representing a model type.
            Usually these objects are either
            marked as <see cref="T:System.SerializableAttribute"/>,
            or must derive from <see cref="T:System.MarshalByRefObject"/> 
            and are passed as parameters for T4 text
            templates in visual studio.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Scaffolding.Core.Metadata.ModelMetadata.EntitySetName">
            <summary>
            Entity Set Name.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Scaffolding.Core.Metadata.ModelMetadata.PrimaryKeys">
            <summary>
            Primary key members of entity.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Scaffolding.Core.Metadata.ModelMetadata.Properties">
            <summary>
            Properties of entity.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Scaffolding.Core.Metadata.ModelMetadata.RelatedEntities">
            <summary>
            Related entity information. This contains
            only the entities related to the current
            model through a foreign key property on the model.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Scaffolding.Core.Metadata.PropertyMetadata">
            <summary>
            Metadata about a property of an entity.
            Usually these objects are either
            marked as <see cref="T:System.SerializableAttribute"/>,
            or must derive from <see cref="T:System.MarshalByRefObject"/> 
            and are passed as parameters for T4 text
            templates in visual studio.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Scaffolding.Core.Metadata.PropertyMetadata.DefaultValue">
            <summary>
            Default value.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Scaffolding.Core.Metadata.PropertyMetadata.IsAssociation">
            <summary>
            Specifies whether this property is an association property.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Scaffolding.Core.Metadata.PropertyMetadata.IsAutoGenerated">
            <summary>
            Specifies whether the property is generated automatically by database.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Scaffolding.Core.Metadata.PropertyMetadata.IsComplexType">
            <summary>
            Specifies whether the property is a Complex Type.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Scaffolding.Core.Metadata.PropertyMetadata.IsConcurrencyProperty">
            <summary>
            Specifies whether this property is used for ensuring concurrency.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Scaffolding.Core.Metadata.PropertyMetadata.IsEnum">
            <summary>
            Specifies whether the property is an Enum Type.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Scaffolding.Core.Metadata.PropertyMetadata.IsEnumFlags">
            <summary>
            Specifies whether the property is an Enum Type representing bit flags.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Scaffolding.Core.Metadata.PropertyMetadata.IsForeignKey">
            <summary>
            Specifies whether this property is a foreign key to another entity.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Scaffolding.Core.Metadata.PropertyMetadata.IsPrimaryKey">
            <summary>
            Specifies whether this property is a primary key for it's entity.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Scaffolding.Core.Metadata.PropertyMetadata.IsReadOnly">
            <summary>
            Specifies whether this property is read only.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Scaffolding.Core.Metadata.PropertyMetadata.PropertyName">
            <summary>
            Name of property.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Scaffolding.Core.Metadata.PropertyMetadata.Scaffold">
            <summary>
            Specifies whether UI should be generated for this property.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Scaffolding.Core.Metadata.PropertyMetadata.ShortTypeName">
            <summary>
            Short type name that is used when generating code.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Scaffolding.Core.Metadata.PropertyMetadata.TypeName">
            <summary>
            Type name of the property type.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Scaffolding.Core.Metadata.PropertyMetadata.AssociationDirection">
            <summary>
            The association direction when 
            <see cref="P:Microsoft.AspNet.Scaffolding.Core.Metadata.PropertyMetadata.IsAssociation"/> is true.
            When the property is false, this should not be used.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Scaffolding.Core.Metadata.PropertyMetadata.IsIndependentAssociation">
            <summary>
            If this property is an association property,
            indicates whether this association has an associated
            foreign key property on the entity (<see langword="false" />)
            or not (<see langword="true" />).
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Scaffolding.Core.Metadata.PropertyMetadata.RelatedModel">
            <summary>
            If this property is an association property,
            contains information about the associated
            model. This is null for non association properties.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Scaffolding.Core.Metadata.RelatedModelMetadata">
            <summary>
            Metadata about a property representing an association.
            Usually these objects are either
            marked as <see cref="T:System.SerializableAttribute"/>,
            or must derive from <see cref="T:System.MarshalByRefObject"/> 
            and are passed as parameters for T4 text
            templates in visual studio.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Scaffolding.Core.Metadata.RelatedModelMetadata.AssociationPropertyName">
            <summary>
            Name of the association property.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Scaffolding.Core.Metadata.RelatedModelMetadata.DisplayPropertyName">
            <summary>
            Name of property used for display.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Scaffolding.Core.Metadata.RelatedModelMetadata.EntitySetName">
            <summary>
            Entity set name.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Scaffolding.Core.Metadata.RelatedModelMetadata.ForeignKeyPropertyNames">
            <summary>
            Name of foreign key property.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Scaffolding.Core.Metadata.RelatedModelMetadata.PrimaryKeyNames">
            <summary>
            Primay key names of entity. 
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Scaffolding.Core.Metadata.RelatedModelMetadata.ShortTypeName">
            <summary>
            Short type name that is used when generating code.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Scaffolding.Core.Metadata.RelatedModelMetadata.TypeName">
            <summary>
            Type name of entity.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Scaffolding.IRollbackServiceUndoManagement">
            <summary>
            For internal use only. Code generator implementors should not
            call this.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.IRollbackServiceUndoManagement.OpenLinkedUndo">
            <summary>
            For internal use only. Code generator implementors should not
            call this.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.IRollbackServiceUndoManagement.AbortLinkedUndo">
            <summary>
            For internal use only. Code generator implementors should not
            call this.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.IRollbackServiceUndoManagement.CloseLinkedUndo">
            <summary>
            For internal use only. Code generator implementors should not
            call this.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Scaffolding.NuGet.INuGetService">
            <summary>
            Service for installing NuGet packages from a code generator.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.NuGet.INuGetService.InstallPackage(EnvDTE.Project,Microsoft.AspNet.Scaffolding.NuGet.NuGetPackage)">
            <summary>
            Attempts installing a NuGet package if any version of it is not already installed.
            </summary>
            <param name="project">The project in which the package should be installed.</param>
            <param name="package">Information about the NuGet package to be installed.</param>
            <exception cref="T:System.ArgumentNullException">
              Either <paramref name="project" /> or <paramref name="package"/> is null.
            </exception>
            <remarks>
              If package installation fails, rethrows the exception thrown by IVsPackageInstaller.InstallPackage().
            </remarks>
        </member>
        <member name="T:Microsoft.AspNet.Scaffolding.NuGet.NuGetPackage">
            <summary>
            Contains data required for a NuGet package installation request.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Scaffolding.NuGet.NuGetPackage.PackageId">
            <summary>
            Package Id.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Scaffolding.NuGet.NuGetPackage.Version">
            <summary>
            Package Version.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Scaffolding.NuGet.NuGetPackage.SourceRepository">
            <summary>
            Repository for the package.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.NuGet.NuGetPackage.#ctor(System.String,System.String,Microsoft.AspNet.Scaffolding.NuGet.NuGetRepository)">
            <summary>
            Constructs an item containing information necessary for a NuGet package installation.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Scaffolding.NuGet.NuGetRegistryRepository">
            <summary>
            Represents a NuGet repository for which 
            the source is defined by a registry key under
            NuGet's repository registry key.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.NuGet.NuGetRegistryRepository.#ctor(System.String,System.Boolean)">
            <summary>
            Constructor.
            </summary>
            <param name="registryKey">The registry key name (under NuGet's repository key)
            that defines the folder on disk containing the packages.</param>
            <param name="isPreUnzipped">Specifies whether the packages are
            installed pre unzipped on disk.</param>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.NuGet.NuGetRegistryRepository.InstallPackageCore(Microsoft.AspNet.Scaffolding.NuGet.NuGetPackage,System.IServiceProvider,EnvDTE.Project)">
            <summary>
            Package installation logic for this repository.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Scaffolding.NuGet.NuGetRepository">
            <summary>
            Represents a source for NuGet package installation.
            Refer to <see cref="T:Microsoft.AspNet.Scaffolding.NuGet.NuGetSourceRepository"/> or 
            <see cref="T:Microsoft.AspNet.Scaffolding.NuGet.NuGetRegistryRepository"/> for an example.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.NuGet.NuGetRepository.IsPackageInstalled(System.IServiceProvider,EnvDTE.Project,System.String)">
            <summary>
            Determines whether a package is already installed.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.NuGet.NuGetRepository.IsHigherVersionPackageInstalled(System.IServiceProvider,EnvDTE.Project,Microsoft.AspNet.Scaffolding.NuGet.NuGetPackage)">
            <summary>
            Determines whether a higher version of the package is already installed.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.NuGet.NuGetRepository.GetPackageInstallerService(System.IServiceProvider)">
            <summary>
            Gets the pacakge installer service.
            </summary>
            <param name="serviceProvider"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.NuGet.NuGetRepository.InstallPackageCore(Microsoft.AspNet.Scaffolding.NuGet.NuGetPackage,System.IServiceProvider,EnvDTE.Project)">
            <summary>
            Package installation logic for this repository.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Scaffolding.NuGet.NuGetSourceRepository">
            <summary>
            Represents a NuGet repository with a 
            fully qualified source path.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.NuGet.NuGetSourceRepository.#ctor">
            <summary>
            Constructor. Use this when you want to specify user's
            configured sources as package installation source path.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.NuGet.NuGetSourceRepository.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="source">Fully qualified source path.</param>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.NuGet.NuGetSourceRepository.InstallPackageCore(Microsoft.AspNet.Scaffolding.NuGet.NuGetPackage,System.IServiceProvider,EnvDTE.Project)">
            <summary>
            Package installation logic for this repository.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Scaffolding.NuGet.VSExtensionPackagesRepository">
            <summary>
            Represents a NuGet repository for which 
            the source is identified by a visual studio
            extension.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.NuGet.VSExtensionPackagesRepository.#ctor(System.String,System.Boolean)">
            <summary>
            
            </summary>
            <param name="extensionId">The Id of the Visual Studio Extension Package.</param>
            <param name="isPreUnzipped">Specifies whether the packages are
            shipped pre unzipped with the extension.</param>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.NuGet.VSExtensionPackagesRepository.InstallPackageCore(Microsoft.AspNet.Scaffolding.NuGet.NuGetPackage,System.IServiceProvider,EnvDTE.Project)">
            <summary>
            Package installation logic for this repository.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Scaffolding.ProjectExtensions">
            <summary>
            Helpful extension methods for code generators.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.ProjectExtensions.GetAssemblyReferences(EnvDTE.Project)">
            <summary>
            Gets the list of file paths of assembly references for the given project.
            </summary>
            <param name="project">The project for which the references should be returned.</param>
            <remarks>
            This does not include the assembly references of the projects in solution
            that the given project is referencing.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.ProjectExtensions.GetAssemblyReferences(EnvDTE.Project,System.Boolean)">
            <summary>
            Gets the list of file paths of assembly references for the given project with the
            ability to select whether to include the references from referenced projects in solution.
            </summary>
            <param name="project">The project for which the references should be returned.</param>
            <param name="includeReferencedProjectReferences">When this is true,
            all the assembly references of the projects in solution which the given project
            references are also included in the results.</param>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.ProjectExtensions.GetAssemblyReference(EnvDTE.Project,System.String)">
            <summary>
            Gets the reference with the given identity (assembly name minus extension) for the given project.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.ProjectExtensions.GetWebConfig(EnvDTE.Project)">
            <summary>
            Get the full path of web.config file or returns null if one does not exist.
            Useful helper for web projects.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.ProjectExtensions.GetAssemblyPath(EnvDTE.Project)">
            <summary>
            Get the output path of built assembly for the given project according to the selected configuration.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.ProjectExtensions.GetFullPath(EnvDTE.Project)">
            <summary>
            Gets the full physical path for a given project.
            This method is being used to get the projectDirectory and not the path to the actual
            project file.
            To get the path to the project file, use <see cref="P:EnvDTE.Project.FileName"/>
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.ProjectExtensions.GetFullPath(EnvDTE.ProjectItem)">
            <summary>
            Get the full physical path for a given project item.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.ProjectExtensions.GetDefaultNamespace(EnvDTE.Project)">
            <summary>
            Gets the default namespace of the project.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.ProjectExtensions.GetDefaultNamespace(EnvDTE.ProjectItem)">
            <summary>
            Gets the default namespace of the projectItem.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.ProjectExtensions.GetPropertyValue``1(EnvDTE.Project,System.String)">
            <summary>
            A strongly typed helper function for getting the project properties.
            </summary>
            <typeparam name="TValue">The type of the property to be returned.</typeparam>
            <returns>If there is a project property with the given <paramref name="propertyName"/>,
            we will cast the value to the type <typeparamref name="TValue"/>and return.
            If the project property does not exist, we return the default value for that type.
            </returns>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.ProjectExtensions.GetCodeLanguage(EnvDTE.Project)">
            <summary>
            Gets the code language for the project. For the
            web site projects, <see cref="F:Microsoft.AspNet.Scaffolding.ProjectLanguage.Unsupported"/>
            is returned.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.ProjectExtensions.GetTargetFramework(EnvDTE.Project)">
            <summary>
            Gets the target framework of the project.
            Returns null if the target framework property of the project is not available.
            Throws an ArgumentException if the property value is in invalid format.
            See <see cref="T:System.Runtime.Versioning.FrameworkName"/> for more information.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.ProjectExtensions.GetPropertyValue``1(EnvDTE.ProjectItem,System.String)">
            <summary>
            A strongly typed helper function for getting the project item properties.
            </summary>
            <typeparam name="TValue">The type of the property to be returned.</typeparam>
            <returns>If there is a project item property with the given <paramref name="propertyName"/>,
            we will cast the value to the type <typeparamref name="TValue"/>and return.
            If the project item property does not exist, we return the default value for that type.
            </returns>
        </member>
        <member name="T:Microsoft.AspNet.Scaffolding.ProjectItemProjectExtensions">
            <summary>
            These are all the extension methods for getting the project items or creating new items
            for a project.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.ProjectItemProjectExtensions.TryGetProjectItem(EnvDTE.Project,System.String,EnvDTE.ProjectItem@)">
            <summary>
            Returns true if the file represented by the path exists in the project.
            </summary>
            <param name="project"></param>
            <param name="relativeFilePath"></param>
            <param name="projectItem"></param>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.ProjectItemProjectExtensions.GetOrCreateProjectFolders(EnvDTE.Project,System.String,Microsoft.AspNet.Scaffolding.IRollbackService,Microsoft.AspNet.Scaffolding.IFileSystemService)">
            <summary>
            Gets the <see cref="T:EnvDTE.ProjectItems"/> at the given projectRelativePath for the given project.
            Creates new items along the relative path if they don't exist already.
            </summary>
            <param name="project">Input Project.</param>
            <param name="projectRelativePath">This should be relative path from the project.</param>
            <param name="rollbackService">Rollback service.</param>
            <param name="fileSystem">File system service.</param>
        </member>
        <member name="T:Microsoft.AspNet.Scaffolding.ProjectLanguage">
            <summary>
            Represents the code language of a project.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.Scaffolding.ProjectLanguage.CSharp">
            <summary>
            Represents CSharp project language.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.Scaffolding.ProjectLanguage.VisualBasic">
            <summary>
            Represents VB project language.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.Scaffolding.ProjectLanguage.Unsupported">
            <summary>
            Represents unsupported project language.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Scaffolding.ProjectLanguage.CodeFileExtension">
            <summary>
            Represents the file extension of the project language.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Scaffolding.ProjectLanguage.ProjectLanguageGuid">
            <summary>
            Gets the Project Type Guid for this language.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.ProjectLanguage.Equals(System.Object)">
            <summary>
            Overriding the base implementation.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.ProjectLanguage.GetHashCode">
            <summary>
            Overriding the base implementation.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.ProjectLanguage.ToString">
            <summary>
            Friendly debugger name for developers.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Scaffolding.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Scaffolding.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Scaffolding.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Scaffolding.Resources.AddScaffoldUndoName">
            <summary>
              Looks up a localized string similar to Add Scaffold.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Scaffolding.Resources.ArgumentInvalidType">
            <summary>
              Looks up a localized string similar to Value must be an instance of type &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Scaffolding.Resources.CannotFindTemplates">
            <summary>
              Looks up a localized string similar to Could not find template &apos;{0}&apos; in these folders [&apos;{1}&apos;], including sub-folders..
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Scaffolding.Resources.CodeGenerationServices_NoActiveProject">
            <summary>
              Looks up a localized string similar to CodeGenerationContext was passed in without setting an active project..
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Scaffolding.Resources.CodeGeneratorBase_EmptyTemplateResult">
            <summary>
              Looks up a localized string similar to Template &apos;{0}&apos; produced no output..
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Scaffolding.Resources.CodeGeneratorBase_FileAlreadyExists">
            <summary>
              Looks up a localized string similar to There is already a file with relative path {0} and the parameter {1} did not indicate to overwrite the file..
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Scaffolding.Resources.CodeGeneratorBase_MemberAlreadyExists">
            <summary>
              Looks up a localized string similar to {0} already has a member called &apos;{1}&apos;. If you want this member to be overwritten, do not pass a value for the &apos;{2}&apos; parameter..
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Scaffolding.Resources.CodeGeneratorDescriptor_CannotCreateCodeGenerator">
            <summary>
              Looks up a localized string similar to Could not create an instance of type {0}. Make sure the type has a parameterless constructor..
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Scaffolding.Resources.CodeTypeExtensions_InvalidCodeType">
            <summary>
              Looks up a localized string similar to Parameter value must be an instance of EnvDTE.CodeClass or EnvDTE.CodeInterface.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Scaffolding.Resources.CodeTypeRefExtensions_NoParentCodeElementForCodeTypeRef">
            <summary>
              Looks up a localized string similar to Cannot determine code language for given CodeTypeRef object because it is not associated with any parent element of type CodeElement..
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Scaffolding.Resources.CodeTypeService_MultipleMatchingTypes">
            <summary>
              Looks up a localized string similar to There are multiple types with the type name &apos;{0}&apos;. Try specifying the fully-qualified type name, including namespace..
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Scaffolding.Resources.CodeTypeService_NoMatchingType">
            <summary>
              Looks up a localized string similar to Cannot find a type matching the name &apos;{0}&apos;. Try specifying the fully-qualified type name, including namespace..
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Scaffolding.Resources.EmptyNuGetSource">
            <summary>
              Looks up a localized string similar to The NuGet respository source provided for the NuGet package &apos;{0}&apos; is null or empty..
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Scaffolding.Resources.ErrorDialogBoxTitle">
            <summary>
              Looks up a localized string similar to Error.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Scaffolding.Resources.FileDoesNotExist">
            <summary>
              Looks up a localized string similar to The provided file &apos;{0}&apos; does not exist. This method expects a fully qualified path of an existing file..
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Scaffolding.Resources.FileReadOnly">
            <summary>
              Looks up a localized string similar to Unable to modify the file {0} because it is read only..
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Scaffolding.Resources.ModelTypeLocator_MultipleTypesFound">
            <summary>
              Looks up a localized string similar to More than one type was found matching the provided type name {0} in the current solution. Scaffolding could not determine which type to use and cannot proceed..
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Scaffolding.Resources.MultipleFilesFound">
            <summary>
              Looks up a localized string similar to There are multiple files matching the name &apos;{0}&apos; within the directory &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Scaffolding.Resources.NullValueNotAllowedAsTemplateParameter">
            <summary>
              Looks up a localized string similar to Null value was passed for parameter {0} when running the text template {1}. Please provide a non null value..
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Scaffolding.Resources.RollbackSerice_ExceptionOccurredDuringRollback">
            <summary>
              Looks up a localized string similar to An exception occurred during code generation rollback. Not all rollback actions were performed..
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Scaffolding.Resources.RollbackService_LinkedUndoAlreadyOpened">
            <summary>
              Looks up a localized string similar to A linked undo has already been opened on this RollbackService and not yet closed..
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Scaffolding.Resources.RollbackService_LinkedUndoNotOpened">
            <summary>
              Looks up a localized string similar to This operation requires an opened  linked undo..
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Scaffolding.Resources.RollbackService_UndoManagerFailed">
            <summary>
              Looks up a localized string similar to Unable to rollback changes due to a failure in the undo manager..
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Scaffolding.Resources.ServiceUnavailable">
            <summary>
              Looks up a localized string similar to A requested service &apos;{0}&apos; is not registered..
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Scaffolding.Resources.StringArgument_Empty_ErrorMessage">
            <summary>
              Looks up a localized string similar to Parameter &apos;{0}&apos; cannot be null or empty..
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Scaffolding.Resources.TemplateInvoker_CannotDetermineCodeLanguage">
            <summary>
              Looks up a localized string similar to Cannot determine code language for default project &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Scaffolding.Resources.TemplateInvoker_FailedToRenderTemplate">
             <summary>
               Looks up a localized string similar to Failed to render template because of the following errors:
            &apos;{0}&apos;..
             </summary>
        </member>
        <member name="P:Microsoft.AspNet.Scaffolding.Resources.TemplateInvoker_NoTemplateFolders">
            <summary>
              Looks up a localized string similar to The parameter searchFolders does not contain any entries. Provide at least one folder to search files..
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Scaffolding.Resources.TemplateProcessingError_ErrorMessage">
            <summary>
              Looks up a localized string similar to &apos;{0}&apos; at line number &apos;{1}&apos; and column number &apos;{2}&apos;.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Scaffolding.Resources.TemplateUtil_CannotFindTemplate">
            <summary>
              Looks up a localized string similar to Cannot find template at &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Scaffolding.Resources.TemplateUtil_InvalidProjectRelativePath">
            <summary>
              Looks up a localized string similar to The relative path &apos;{0}&apos; is invalid. The path provided must be relative to the project, for example: &quot;Models\Person.cs&quot;..
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Scaffolding.Resources.UnsupportedCodeLanguage">
            <summary>
              Looks up a localized string similar to The code language of the current project is not supported. The only supported languages are CSharp and VisualBasic..
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Scaffolding.RollbackService">
            <summary>
            This class provides rollback support for code generators. It has some
            built in rollback functionality (eg: NewFileAdded), and the ability
            for code generators to provide any action via the AddRollbackAction
            method. These actions will be performed upon a code generation 
            execution being rolled back.
            For internal microsoft use only. Use <see cref="T:Microsoft.AspNet.Scaffolding.IRollbackService"/>
            in custom code generators.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.RollbackService.#ctor(System.IServiceProvider)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.RollbackService.NewProjectItemAdded(EnvDTE.Project,System.String)">
            <summary>
            Notification that a new file was added that may need to be rolled back.
            </summary>
            <param name="project">Project in which the new item was added.</param>
            <param name="projectRelativePath">Relative path of the item that was added.</param>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.RollbackService.NewProjectFolderAdded(EnvDTE.Project,System.String)">
            <summary>
            Notification that a new folder was added that may need to be rolled back.
            </summary>
            <param name="project">Project in which the new folder was added.</param>
            <param name="projectRelativePath">Relative path of the folder that was added.</param>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.RollbackService.ProjectItemOverwritten(EnvDTE.ProjectItem,System.String,System.Boolean)">
            <summary>
            Notification that an existing file was modified and may need to be rolled back.
            </summary>
            <param name="projectItem">The project file for the modified file</param>
            <param name="oldText">The file's text before modification</param>
            <param name="checkedOut">Whether SCC checkout occurred</param>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.RollbackService.AddRollbackAction(System.Action)">
            <summary>
            Notification that a rollback action needs to occur if rollback occurs.
            </summary>
            <param name="action">The action to be performed if rollback occurs</param>
        </member>
        <member name="T:Microsoft.AspNet.Scaffolding.Categories">
            <summary>
            Contains the common category identifiers defined by framework.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.Scaffolding.Categories.Common">
            <summary>
            Represents "Common" category.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.Scaffolding.Categories.Other">
            <summary>
            Represents "Other" category.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.Scaffolding.Categories.WebApi">
            <summary>
            Represents "Common/WebApi" category.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.Scaffolding.Categories.Mvc">
            <summary>
            Represents "Common/Mvc" category.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.Scaffolding.Categories.MvcController">
            <summary>
            Represents "Common/Mvc/Controller" category.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.Scaffolding.Categories.MvcView">
            <summary>
            Represents "Common/Mvc/View" category.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.Scaffolding.Categories.MvcArea">
            <summary>
            Represents "Common/Mvc/Area" category.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.Scaffolding.Categories.Api">
            <summary>
            Represents "Common/Api" category.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.Scaffolding.Categories.RazorPage">
            <summary>
            Respresents "Common/RazorPage" category.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.Scaffolding.Categories.Layouts">
            <summary>
            Represents "Layouts" category.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.Scaffolding.Categories.Identity">
            <summary>
            Represents "Identity" category.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Scaffolding.IServiceRegistrar">
            <summary>
            This interface provides a mechanism for code generators to register services in advance of code generation operations.
            Classes that implemenent this interface should export themselves as typeof(IServiceRegistrar) using <see cref="T:System.ComponentModel.Composition.ExportAttribute"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.IServiceRegistrar.RegisterServices(System.ComponentModel.Design.IServiceContainer)">
            <summary>
            Provides a way to register services with the given IServiceContainer. The services added here can be used later by code generation operations through the IServiceProvider.
            </summary>
            <param name="container">The container where services can be registered for use during code generation operations.</param>
        </member>
        <member name="T:Microsoft.AspNet.Scaffolding.SCodeGeneratorDialog">
            <summary>
            Code generator dialog service in visual studio.
            </summary>
            <remarks>
            This marker service interface can be used to obtain
            global services related to ASP.NET Scaffolding.
            
            Interfaces that can be obtained from this service are:
            
            <see cref="T:Microsoft.AspNet.Scaffolding.ICodeGeneratorDialogInvoker"/>
            to invoke Add -> New Scaffolded Item dialog from
            other VSPackage functionalities like 
            custom visual studio menu implementation.
            
            <see cref="T:Microsoft.AspNet.Scaffolding.ICategoryRegistrationService"/>
            to register localized names for custom
            category node names defined by other VSPackages.
            </remarks>
        </member>
        <member name="T:Microsoft.AspNet.Scaffolding.ServiceRegistrar">
            <summary>
            This class is meant for scaffolding infrastructure use only and should not be called directly.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Scaffolding.Templating.ITemplateInvoker">
            <summary>
            Services for invoking T4 text templates for code generation.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.Templating.ITemplateInvoker.InvokeTemplate(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Invokes a T4 text template and returns the result.
            </summary>
            <param name="templatePath">Full path of T4 text template file.</param>
            <param name="templateParameters">Parameters for template execution.
            These parameters can be accessed in text template using a parameter directive.
            The values passed in must be either serializable or 
            extend <see cref="T:System.MarshalByRefObject"/> type.</param>
            <returns>Generated code if there were no processing errors. Throws 
            <see cref="T:System.InvalidOperationException" /> otherwise.
            </returns>
        </member>
        <member name="T:Microsoft.AspNet.Scaffolding.Templating.ScaffoldingAssemblyDirectiveProcessor">
            <summary>
            This directive processor supports a T4 directive like this:
            {#@ ScaffoldingAssembly Processor="ScaffoldingAssemblyLoader" #}
            By using the above directive, a T4 template will be able to load the 
            Microsoft.AspNet.Scaffolding.dll
            and then can import any namespaces from there to execute code in them.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.Templating.ScaffoldingAssemblyDirectiveProcessor.Initialize(Microsoft.VisualStudio.TextTemplating.ITextTemplatingEngineHost)">
            <summary>
            Implementation of <see cref="M:Microsoft.VisualStudio.TextTemplating.IDirectiveProcessor.Initialize(Microsoft.VisualStudio.TextTemplating.ITextTemplatingEngineHost)"/>.
            Does nothing.
            </summary>
            <param name="host"></param>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.Templating.ScaffoldingAssemblyDirectiveProcessor.IsDirectiveSupported(System.String)">
            <summary>
            Implementation of <see cref="M:Microsoft.VisualStudio.TextTemplating.IDirectiveProcessor.IsDirectiveSupported(System.String)"/>.
            Returns true is the directive is "ScaffoldingAssembly", otherwise returns false.
            </summary>
            <param name="directiveName"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.Templating.ScaffoldingAssemblyDirectiveProcessor.ProcessDirective(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Implementation of <see cref="M:Microsoft.VisualStudio.TextTemplating.IDirectiveProcessor.ProcessDirective(System.String,System.Collections.Generic.IDictionary{System.String,System.String})"/>.
            Does nothing.
            </summary>
            <param name="directiveName"></param>
            <param name="arguments"></param>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.Templating.ScaffoldingAssemblyDirectiveProcessor.StartProcessingRun(System.CodeDom.Compiler.CodeDomProvider,System.String,System.CodeDom.Compiler.CompilerErrorCollection)">
            <summary>
            Implementation of <see cref="M:Microsoft.VisualStudio.TextTemplating.IDirectiveProcessor.StartProcessingRun(System.CodeDom.Compiler.CodeDomProvider,System.String,System.CodeDom.Compiler.CompilerErrorCollection)"/>.
            Sets the errors.
            </summary>
            <param name="languageProvider"></param>
            <param name="templateContents"></param>
            <param name="errors"></param>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.Templating.ScaffoldingAssemblyDirectiveProcessor.FinishProcessingRun">
            <summary>
            Implementation of <see cref="M:Microsoft.VisualStudio.TextTemplating.IDirectiveProcessor.FinishProcessingRun"/>.
            Does nothing.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.Templating.ScaffoldingAssemblyDirectiveProcessor.GetPreInitializationCodeForProcessingRun">
            <summary>
            Implementation of <see cref="M:Microsoft.VisualStudio.TextTemplating.IDirectiveProcessor.GetPreInitializationCodeForProcessingRun"/>.
            Returns empty string.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.Templating.ScaffoldingAssemblyDirectiveProcessor.GetClassCodeForProcessingRun">
            <summary>
            Implementation of <see cref="M:Microsoft.VisualStudio.TextTemplating.IDirectiveProcessor.GetClassCodeForProcessingRun"/>.
            Returns empty string.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.Templating.ScaffoldingAssemblyDirectiveProcessor.GetPostInitializationCodeForProcessingRun">
            <summary>
            Implementation of <see cref="M:Microsoft.VisualStudio.TextTemplating.IDirectiveProcessor.GetPostInitializationCodeForProcessingRun"/>.
            Returns empty string.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.Templating.ScaffoldingAssemblyDirectiveProcessor.GetTemplateClassCustomAttributes">
            <summary>
            Implementation of <see cref="M:Microsoft.VisualStudio.TextTemplating.IDirectiveProcessor.GetTemplateClassCustomAttributes"/>.
            Returns nothing.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.Templating.ScaffoldingAssemblyDirectiveProcessor.GetImportsForProcessingRun">
            <summary>
            Implementation of <see cref="M:Microsoft.VisualStudio.TextTemplating.IDirectiveProcessor.GetImportsForProcessingRun"/>.
            Returns the "Microsoft.AspNet.Scaffolding" namespace.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.Templating.ScaffoldingAssemblyDirectiveProcessor.GetReferencesForProcessingRun">
            <summary>
            Implementation of <see cref="M:Microsoft.VisualStudio.TextTemplating.IDirectiveProcessor.GetReferencesForProcessingRun"/>.
            Returns the scaffolding assembly reference path.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.AspNet.Scaffolding.Templating.ScaffoldingAssemblyDirectiveProcessor.Errors">
            <summary>
            Implementation of <see cref="P:Microsoft.VisualStudio.TextTemplating.IDirectiveProcessor.Errors"/>.
            Error collection for DirectiveProcessor to add Errors/Warnings to.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.Templating.ScaffoldingAssemblyDirectiveProcessor.SetProcessingRunIsHostSpecific(System.Boolean)">
            <summary>
            Implementation of <see cref="M:Microsoft.VisualStudio.TextTemplating.IDirectiveProcessor.SetProcessingRunIsHostSpecific(System.Boolean)"/>.
            Does nothing.
            </summary>
            <param name="hostSpecific"></param>
        </member>
        <member name="P:Microsoft.AspNet.Scaffolding.Templating.ScaffoldingAssemblyDirectiveProcessor.RequiresProcessingRunIsHostSpecific">
            <summary>
            Implementation of <see cref="P:Microsoft.VisualStudio.TextTemplating.IDirectiveProcessor.RequiresProcessingRunIsHostSpecific"/>.
            Returns false.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Scaffolding.Templating.TemplateInvoker">
            <summary>
            Contains useful helper functions for running visual studio text transformation.
            For internal microsoft use only. Use <see cref="T:Microsoft.AspNet.Scaffolding.Templating.ITemplateInvoker"/>
            in custom code generators.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.Templating.TemplateInvoker.#ctor(System.IServiceProvider)">
            <summary>
            Constructor.
            </summary>
            <param name="serviceProvider"></param>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.Templating.TemplateInvoker.InvokeTemplate(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Executes a code generator template to generate the code.
            </summary>
            <param name="templatePath">Full path of the template file.</param>
            <param name="templateParameters">Parameters for the template.
            These parameters can be accessed in text template using a parameter directive.
            The values passed in must be either serializable or 
            extend <see cref="T:System.MarshalByRefObject"/> type.</param>
            <returns>Generated code if there were no processing errors. Throws 
            <see cref="T:System.InvalidOperationException" /> otherwise.
            </returns>
        </member>
        <member name="T:Microsoft.AspNet.Scaffolding.Templating.TemplateProcessingError">
            <summary>
            Contains information about errors resulted in running a
            visual studio T4 text template transformation.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Scaffolding.Templating.TemplateProcessingError.Message">
            <summary>
            Error message.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Scaffolding.Templating.TemplateProcessingError.LineNumber">
            <summary>
            Line number within the T4 template.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Scaffolding.Templating.TemplateProcessingError.ColumnNumber">
            <summary>
            Column number within the line.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.Templating.TemplateProcessingError.ToString">
            <summary>
            Overriding base implementation.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Scaffolding.Templating.TemplateProcessingResult">
            <summary>
            Contains information about result of running a
            visual studio T4 text template transformation.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Scaffolding.Templating.TemplateProcessingResult.GeneratedText">
            <summary>
            Generated text of transformation if it was
            successful. This will be empty when there are processing errors.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Scaffolding.Templating.TemplateProcessingResult.ProcessingErrors">
            <summary>
            Any errors resulted from transformation.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Scaffolding.Templating.TemplateProcessingResult.TemplateFileExtension">
            <summary>
            The file extension specified by T4 text template.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.VisualStudioEditorService.FindSingleTextChange(System.String,System.Int32,System.Int32,System.String,System.Int32,System.Int32)">
            <summary>
            Finds a single range of difference between two substrings. The returned change position
            is relative to the start of each substring.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Scaffolding.VsHierarchyExtensions">
            <summary>
            Extensions for IVSHierarchy.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Scaffolding.VsHierarchyExtensions.IsDotNetCoreWebProject(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy)">
            <summary>
            Returns true if the project has DotNetCoreWeb capability.
            </summary>
        </member>
    </members>
</doc>
